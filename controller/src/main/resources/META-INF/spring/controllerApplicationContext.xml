<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
        
    <import resource="classpath*:/META-INF/spring/domainApplicationContext.xml" />
    <import resource="classpath*:/META-INF/spring/daoApplicationContext.xml" />
    
    <context:component-scan base-package="org.openhds.controller" />

    <context:property-placeholder location="classpath*:site-config.properties" />
    
     <!-- Used by the baseTransactionBean to determine when to insert the Transactional Advice -->
     <!-- In this case it will be when the Transactional annotation is found -->
     <bean id="txAttrSource" class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
        
     <!-- Base Transaction Bean Declaration -->
     <!-- Any bean that uses the Transactional annotation should set its parent to this bean to receive the proper proxy  -->
    <!-- The <tx:annotation-driven /> element, or AdvisorAutoProxyCreator are not used because multiple proxies were generated -->
    <!-- when using BeforeAdvice with a Transactional class. In other words, the Proxy created for the BeforeAdvice would contain -->
    <!-- another Proxy bean (Transactional Proxy) as its target. If transaction beans declare this as their parent, only 1 proxy -->
    <!-- is created, the Transactional proxy, which can contain a list of interceptors (pre and post), -->
    <!-- which is where BeforeAdvice, etc can be placed. The target of the Transactional proxy is the bean itself, not another proxy -->
    <!-- Did not see any other way of avoiding multiple proxies from being created -->
	<bean id="baseTransactionBean" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean" abstract="true">
    	<property name="transactionManager" ref="transactionManager" />
    	<property name="transactionAttributeSource" ref="txAttrSource" />
	</bean>

	<!-- Request scoped bean to serve as a cache for the current logged in user -->
    <bean id="userCache" class="org.openhds.controller.util.UserCache" scope="request" />
     
	<!-- Simple bean to get current logged in user -->
    <bean id="currentUser" class="org.openhds.controller.service.impl.CurrentUserImpl" >
        <property name="userDao" ref="userDao" />
    </bean>
    
    <!-- Authorization Advice to determine if logged in User has privilege to access method within service -->
	<bean id="authorizationAdvice" class="org.openhds.controller.aop.AuthorizationAdvice">
		<property name="currentUser" ref="currentUser" />
	</bean>
	
	<context:component-scan base-package="org.openhds"></context:component-scan>
    
    <!-- security configuration -->
    <bean id="userDetailsService" parent="baseTransactionBean">
    	<property name="target">
    		<bean class="org.openhds.controller.security.UserDetailsService">
        		<property name="userDao" ref="userDao" />
    		</bean>
   		</property>
	</bean>
        
    <!-- Base service bean that includes authorization advice -->
	<bean id="baseServiceBean" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
            	<value>authorizationAdvice</value>
            </list>
        </property>
	</bean>
	
	<!-- This should be used as the parent for any service bean that has a Transactional annotation -->
   	<bean id="baseServiceTransactionBean" parent="baseTransactionBean" abstract="true">
        <property name="preInterceptors">
            <list>
            	<ref bean="authorizationAdvice" />
            </list>
    	</property>
	</bean>
	
	<bean id="baselineService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.BaselineServiceImpl">
		        <constructor-arg ref="membershipService" />
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
	
	<bean id="deathService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.DeathServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="individualService" />
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="demRatesService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.DemRatesServiceImpl">
		        <constructor-arg ref="genericDao" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="extensionService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.ExtensionServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    		
	<bean id="fieldWorkerService" parent="baseServiceBean">
	 	<property name="target">
	 		<bean class="org.openhds.controller.service.impl.FieldWorkerServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="fieldWorkerIdGenerator" />
		    </bean>
		</property>
    </bean>
    
	<bean id="formService" parent="baseServiceBean">
	 	<property name="target">
	 		<bean class="org.openhds.controller.service.impl.FormServiceImpl">
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
		    </bean>
		</property>
    </bean>
	
    <bean id="individualMergeService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.IndividualMergeServiceImpl">
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="membershipService" />
		        <constructor-arg ref="inMigrationService" />
		    </bean>
	    </property>
    </bean>
     
    <bean id="individualService" parent="baseServiceTransactionBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.IndividualServiceImpl">
				<constructor-arg ref="genericDao" />
				<constructor-arg ref="individualIdGenerator" />
				<constructor-arg ref="siteProperties" />
				<constructor-arg ref="entityService" />
				<constructor-arg ref="idSchemeResource" />
    		</bean>
   		</property>
    </bean>
        
    <bean id="inMigrationService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.InMigrationServiceImpl">
		        <constructor-arg ref="residencyService" />
		        <constructor-arg ref="entityService" />
		        <constructor-arg ref="individualService" />
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="locationHierarchyService" parent="baseServiceBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.LocationHierarchyServiceImpl">		    
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
		        <constructor-arg ref="locationIdGenerator" />
		        <constructor-arg ref="locationHierarchyIdGenerator" />
		    </bean>
	    </property>
    </bean>
    
     <bean id="locationHierarchyLevelService" parent="baseServiceBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.LocationHierarchyLevelServiceImpl">		    
		        <constructor-arg ref="genericDao" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="settingsService" parent="baseServiceBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.SettingsServiceImpl">
    			<constructor-arg ref="siteProperties" />
    			<constructor-arg ref="taskDao" />
    			<constructor-arg ref="formService" />
    			<constructor-arg ref="fieldWorkerService" />
    		</bean>
    	</property>
    </bean>
    
    <bean id="membershipService" parent="baseServiceBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.MembershipServiceImpl">
				<constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
    			<constructor-arg ref="individualService" />
    			<constructor-arg ref="siteProperties" />
    		</bean>
   		</property>
	</bean>
    
    <bean id="outMigrationService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.OutMigrationServiceImpl">
		    	<constructor-arg ref="residencyService" />
		    	<constructor-arg ref="individualService" />
		        <constructor-arg ref="genericDao" />
				<constructor-arg ref="siteProperties" />
				<constructor-arg ref="entityService" />
		    </bean>
	    </property>
    </bean>  
    
    <bean id="pregnancyService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.PregnancyServiceImpl">
		        <constructor-arg ref="entityService" />
    			<constructor-arg ref="individualService" />
    			<constructor-arg ref="genericDao" />
    			<constructor-arg ref="siteProperties" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="relationshipService" parent="baseServiceBean">
    	<property name="target">
    		<bean class="org.openhds.controller.service.impl.RelationshipServiceImpl">
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
    			<constructor-arg ref="individualService" />   
    			<constructor-arg ref="siteProperties" /> 		
    		</bean>
   		</property>
	</bean>
  	
    <bean id="residencyService" parent="baseServiceTransactionBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.ResidencyServiceImpl">
		        <constructor-arg ref="genericDao" />
		        <constructor-arg ref="siteProperties" />
		       	<constructor-arg ref="entityService" /> 
		    </bean>
	    </property>
    </bean>
    
      
    <bean id="roleService" parent="baseServiceTransactionBean">
	    <property name="target">
		    <bean class="org.openhds.controller.service.impl.RoleServiceImpl">
		    	<constructor-arg ref="roleDao" />
		    	<constructor-arg ref="genericDao" />
		    	<constructor-arg ref="entityService" />
		    </bean>
	    </property>
    </bean>
    
    <bean id="roundService" parent="baseServiceBean">
    	<property name="target">
		    <bean class="org.openhds.controller.service.impl.RoundServiceImpl">
		        <constructor-arg ref="genericDao" />
                <constructor-arg ref="entityService" />
		    </bean>
	    </property>
    </bean>
     
    <bean id="socialGroupService" parent="baseServiceTransactionBean">
   		<property name="target">
		    <bean class="org.openhds.controller.service.impl.SocialGroupServiceImpl">
		        <constructor-arg ref="genericDao" />
    			<constructor-arg ref="individualService" />
    			<constructor-arg ref="entityService"/>
    			<constructor-arg ref="socialGroupIdGenerator" />
		    </bean>
	    </property>
    </bean>
     
    <bean id="visitService" parent="baseServiceBean">
    	<property name="target">
		    <ref bean="visitServiceImpl"/>
	    </property>
    </bean>
	
	<!-- ID GENERATOR BEANS --> 

		<!--
    <bean id="locationIdGenerator" class="org.openhds.controller.idgeneration.LocationGenerator" parent="idGenerator">
    	<property name="generated"><value>${openhds.locationIdUseGenerator}</value></property>
    </bean>
    
    <bean id="locationHierarchyIdGenerator" class="org.openhds.controller.idgeneration.LocationHierarchyGenerator" parent="idGenerator"/>
   
    <bean id="individualIdGenerator" class="org.openhds.controller.idgeneration.IndividualGenerator" parent="idGenerator" >
    	<property name="generated"><value>${openhds.individualIdUseGenerator}</value></property>
    </bean>
    
    <bean id="socialGroupIdGenerator" class="org.openhds.controller.idgeneration.SocialGroupGenerator" parent="idGenerator">
		<property name="generated"><value>${openhds.sgIdUseGenerator}</value></property>
    </bean>
    
    <bean id="visitIdGenerator" class="org.openhds.controller.idgeneration.VisitGenerator" parent="idGenerator">
    	<property name="generated"><value>${openhds.visitIdUseGenerator}</value></property>
    </bean>
    
    <bean id="fieldWorkerIdGenerator" class="org.openhds.controller.idgeneration.FieldWorkerGenerator" parent="idGenerator" >
    	<property name="generated"><value>${openhds.fwIdUseGenerator}</value></property>
    </bean> -->
    
    <!-- ID SCHEME BEANS -->

	<!-- Supported fields are LOCATION_NAME, LOCATION_HIERARCHY_ID -->
    <bean id="locationIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="Location" />
    	<property name="prefix"><value>${openhds.locationPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.locationCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.locationIncrementBound}</value></property>
    	<property name="length"><value>${openhds.locationIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="LOCATION_NAME"><value>${openhds.locationNameLength}</value></entry>
    			<entry key="LOCATION_HIERARCHY_ID"><value>${openhds.locationHierarchyIdLength}</value></entry>
    		</map>
    	</property>
    </bean>
    
    <!-- Supported fields are CHILD_LOC_NAME -->
    <!-- If CHILD_LOC_NAME is used, CHILD_LOC_NAME_FIRST and CHILD_LOC_NAME_LAST must be as well -->
    <bean id="locationHierarchyIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="LocationHierarchy" />
    	<property name="prefix"><value>${openhds.locationHPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.locationHCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.locationHIncrementBound}</value></property>
    	<property name="length"><value>${openhds.locationHIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="CHILD_LOC_NAME"><value>${openhds.locationHChildLocNameLength}</value></entry>
    			<entry key="CHILD_LOC_NAME_FIRST"><value>${openhds.locationHChildLocFirstNameLength}</value></entry>
    			<entry key="CHILD_LOC_NAME_LAST"><value>${openhds.locationHChildLocLastNameLength}</value></entry>
    		</map>
    	</property>
    </bean>
       
    <!-- Supported fields are INDIVIDUAL_FNAME, INDIVIDUAL_MNAME, INDIVIDUAL_LNAME -->
    <bean id="individualIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="Individual" />
    	<property name="prefix"><value>${openhds.individualPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.individualCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.individualIncrementBound}</value></property>
    	<property name="length"><value>${openhds.individualIdLength}</value></property>
    	<property name="fields">
    		<map>
				<entry key="LOCATION_PREFIX"><value>${openhds.locationIdLength}</value></entry>
				<!-- <entry key="INDIVIDUAL_MNAME"><value>${openhds.individualMiddleNameLength}</value></entry>
				<entry key="INDIVIDUAL_LNAME"><value>${openhds.individualLastNameLength}</value></entry> -->
    		</map>
    	</property>
    </bean>
    
     <!-- Supported fields are SOCIALGROUP_NAME -->
    <bean id="socialGroupIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="SocialGroup" />
    	<property name="prefix"><value>${openhds.sgPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.sgCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.sgIncrementBound}</value></property>
    	<property name="length"><value>${openhds.sgIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="SOCIALGROUP_NAME"><value>${openhds.sgIdLength}</value></entry>
    		</map>
    	</property>
    </bean>
    
    <!-- Supported fields are VISIT_LOCID, VISIT_ROUND -->
    <bean id="visitIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="Visit" />
    	<property name="prefix"><value>${openhds.visitPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.visitCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.visitIncrementBound}</value></property>
    	<property name="length"><value>${openhds.visitIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="VISIT_LOCID"><value>${openhds.visitLocationIdLength}</value></entry>
    			<entry key="VISIT_ROUND"><value>${openhds.visitRound}</value></entry>
    		</map>
    	</property>
    </bean>
    
    <!-- Supported fields are FIELDWORKER_FNAME, FIELDWORKER_LNAME -->
    <bean id="fieldWorkerIdScheme" class="org.openhds.controller.idgeneration.IdScheme">
    	<property name="name" value="FieldWorker" />
    	<property name="prefix"><value>${openhds.fwPrefix}</value></property>
    	<property name="checkDigit"><value>${openhds.fwCheckDigit}</value></property>
    	<property name="incrementBound"><value>${openhds.fwIncrementBound}</value></property>
    	<property name="length"><value>${openhds.fwIdLength}</value></property>
    	<property name="fields">
    		<map>
    			<entry key="FIELDWORKER_FNAME"><value>${openhds.fwFirstNameLength}</value></entry>
    			<entry key="FIELDWORKER_LNAME"><value>${openhds.fwLastNameLength}</value></entry>
    		</map>
    	</property>
    </bean>
    
	<bean id="siteConfigService" class="org.openhds.controller.service.impl.SiteConfigServiceImpl" scope="singleton">
		<property name="propertyFile" value="classpath*:site-config.properties" />
		<property name="visitIdLength" value="${openhds.visitIdLength}" />
		<property name="visitIdScheme"><ref bean="visitIdScheme"/></property>
    </bean>    
</beans>