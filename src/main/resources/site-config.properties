# -- ID Schemes --
# Prefix: This can be a custom string of characters to be 
# be placed at the beginning of an id when it's generated
#
# Check Digit: This will generate a check character once
# the id has been formed
#
# Increment Bound: This will continue to generate an id
# up to a certain bound. Example: an increment bound of
# 99 would generate up to 99 id's of the same format.
# MBI01, MBI02, ... MBI99.
#
# UseGenerator: This will ensure that the system will use the 
# provided generator classes to create the id. If turned off, 
# the system cannot guarantee that the id entered is of
# correct format since the user will be required to enter it
# manually.
#
# To configure the ordering of fields in which an id can be formed,
# it will require modifying the application-context.xml

# Location
# This configuration generates id's that take the following form:
# If the Location Hierarchy is specified to be MBINGU:
# The id will be: MBI01, MBI02, MBI03, ..., etc
openhds.locationPrefix=
openhds.locationCheckDigit=false
openhds.locationIncrementBound=999999
# length the id generated must be
openhds.locationIdLength=9
# location name to be used in the id
openhds.locationNameLength=0
# location hierarchy id to be used in the id
openhds.locationHierarchyIdLength=3
# use the provided location id generator? if not, you must enter the id yourself
openhds.locationIdUseGenerator=true

# Location Hierarchy
# This configuration generates id's that take the following forms:
# If the Child Location Name is specified as MBINGU:
# The id will be: MBI
# If the Child Location Name is specified as AKWA ESUK:
# The id will be: AKE
# Increment digits and bounds are not applicable for location hierarchy.
openhds.locationHPrefix=
openhds.locationHCheckDigit=false
# not applicable for location hierarchy right now, keep at 0
openhds.locationHIncrementBound=0
# length the id generated must be
openhds.locationHIdLength=3
# child location name to be used in the id if the child loc name is one word
openhds.locationHChildLocNameLength=3
# child location first name to be used in the id if the child loc name is two words
openhds.locationHChildLocFirstNameLength=2
# child location last name to be used in the id if the child loc name is two words
openhds.locationHChildLocLastNameLength=1

# Individual
# This configuration generates id's that take the following forms:
# If the First Name is specified as Nancy.
# If the Last Name is specified as Bassey.
# The id will be: NABA001D, NABA002Q, ..., etc
openhds.individualPrefix=
openhds.individualCheckDigit=false
openhds.individualIncrementBound=999
# length the id generated must be, since the generator isn't being used
openhds.individualIdLength=12
# individual first name to be used in the id
openhds.individualFirstNameLength=3
# individual middle name to be used in the id
openhds.individualMiddleNameLength=0
# individual last name to be used in the id
openhds.individualLastNameLength=3
# use the provided individual id generator? if not, you must enter the id yourself
openhds.individualIdUseGenerator=true

# Social Group
# This configuration generates id's that take the following forms:
# SG01, SG02, ..., etc.
# The user is responsible for entering in Social Group id's themselves. 
openhds.sgPrefix=
openhds.sgCheckDigit=false
openhds.sgIncrementBound=0
# length the id generated must be
openhds.sgIdLength=11
# length to use for the social group name
openhds.sgNameLength=0
# use the provided social group id generator? if not, you must enter the id yourself
openhds.sgIdUseGenerator=true

# Visit
# This configuration generates id's that take the following forms:
# If the location Id is specified as MBI01
# If the round number is specified to be 2
# The id will be: VMBI21, VMBI22, VMBI23, ..., etc.
# The increment bound is not applicable for visit entities at the moment.
openhds.visitPrefix=
openhds.visitCheckDigit=false
openhds.visitIncrementBound=0
openhds.visitIdLength=12
# location id to be used in forming the visit id
openhds.visitLocationIdLength=9
# socialgroup id to be used in forming the visit id
openhds.visitSocialGroupIdLength=11
# round number to be used in forming the visit id, 0 for false, 1 for true
openhds.visitRound=1
# use the provided visit id generator? if not, you must enter the id yourself
openhds.visitIdUseGenerator=true

# Field Worker
# This configuration generates id's that take the following forms:
# If the field worker first name is Nancy
# If the field worker last name Bassey
# The id will be: FWNB1, FWNB2, FWNB3, ..., etc
openhds.fwPrefix=FW
openhds.fwCheckDigit=false
openhds.fwIncrementBound=0
# length the id generated must be
openhds.fwIdLength=4
# how many characters of the first name to use in forming the id
openhds.fwFirstNameLength=1
# how many characters of the last name to use in forming the id
openhds.fwLastNameLength=1
# use the provided field worker generator? if not, you must enter the id yourself
openhds.fwIdUseGenerator=true
