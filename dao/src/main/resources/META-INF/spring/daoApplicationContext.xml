<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/lang
        http://www.springframework.org/schema/lang/spring-lang-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee-3.2.xsd">
        
   <import resource="classpath*:/META-INF/spring/domainApplicationContext.xml" />
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${dbDriver}"/>
		<property name="url" value="${dbUrl}"/>
		<property name="username" value="${dbUser}"/>
		<property name="password" value="${dbPass}"/>
		<property name="validationQuery" value="SELECT 1" />
    	<property name="testOnBorrow" value="true" />
	 </bean>
	                      
	 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>				      
				<value>org.openhds.domain.model.AdultVPM</value>
				<value>org.openhds.domain.model.AsyncTask</value>
                <value>org.openhds.domain.model.AuditableCollectedEntity</value>
				<value>org.openhds.domain.model.AuditableEntity</value>
				<value>org.openhds.domain.model.ClassExtension</value>
				<value>org.openhds.domain.model.Death</value>
				<value>org.openhds.domain.model.DemRates</value>
				<value>org.openhds.domain.model.Extension</value>
				<value>org.openhds.domain.model.FieldWorker</value>
				<value>org.openhds.domain.model.Individual</value>
				<value>org.openhds.domain.model.InMigration</value>
				<value>org.openhds.domain.model.Location</value>
				<value>org.openhds.domain.model.LocationHierarchy</value>
				<value>org.openhds.domain.model.LocationHierarchyLevel</value>
				<value>org.openhds.domain.model.Membership</value>
				<value>org.openhds.domain.model.MigrationType</value>
				<value>org.openhds.domain.model.NeoNatalVPM</value>
				<value>org.openhds.domain.model.Note</value>
				<value>org.openhds.domain.model.Outcome</value>
				<value>org.openhds.domain.model.OutMigration</value>
				<value>org.openhds.domain.model.PostNeoNatalVPM</value>
				<value>org.openhds.domain.model.PregnancyObservation</value>
				<value>org.openhds.domain.model.PregnancyOutcome</value>
				<value>org.openhds.domain.model.Privilege</value>
				<value>org.openhds.domain.model.Relationship</value>
				<value>org.openhds.domain.model.Residency</value>
				<value>org.openhds.domain.model.Role</value>
				<value>org.openhds.domain.model.Round</value>
				<value>org.openhds.domain.model.SocialGroup</value>
				<value>org.openhds.domain.model.User</value>
				<value>org.openhds.domain.model.Vaccination</value>
				<value>org.openhds.domain.model.Visit</value>
				<value>org.openhds.domain.model.Whitelist</value>
				<value>org.openhds.errorhandling.domain.ErrorLog</value>
				<value>org.openhds.errorhandling.domain.Error</value>
			</list>
		</property>
		<property name="hibernateProperties">
	        <props>
	            <prop key="hibernate.show_sql">${hibernateShowSql}</prop>
	            <prop key="hibernate.hbm2ddl.auto">${hibernateExport}</prop>        
	            <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> 
	            <prop key="hibernate.jdbc.use_streams_for_binary"></prop> 
	            <prop key="hibernate.jdbc.batch_size">0</prop> 
	        </props>
		</property>
	 </bean>
	 
	 <!-- transaction configuration delegates responsibility for transaction management -->
     <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
     	<property name="sessionFactory" ref="sessionFactory" />
     </bean>
         
     <!-- Introduction Advisor that looks for a DynamicFinder annotation on methods -->
	 <!-- Refer to http://www.ibm.com/developerworks/java/library/j-genericdao.htm -->
     <bean id="dynamicFinderAdvisor" class="org.openhds.dao.finder.Advisor" /> 
         	 
	 <tx:annotation-driven />
	 
	 <!-- dao configuration -->

	<!-- All entity DAOs should inhert from this bean -->
    <bean id="baseDao" class="org.openhds.dao.service.impl.BaseDaoImpl" abstract="true">
        <property name="sessionFactory" ref="sessionFactory" />
        <property name="namingStrategy">
            <bean class="org.openhds.dao.finder.AnnotationNamingStrategy" />
        </property>
        <property name="argumentTypeFactory">
            <bean class="org.openhds.dao.finder.SimpleArgumentTypeFactory" />
        </property>
     </bean>

     
    <!-- A proxy that contains an introduction advisor -->
	<!-- Any bean that uses the DynamicFinder annotation should use this bean as its parent -->
    <bean id="dynamicDao" class="org.springframework.aop.framework.ProxyFactoryBean" abstract="true">
        <property name="interceptorNames">
            <list>
                <value>dynamicFinderAdvisor</value>
            </list>
        </property>
    </bean>

	<!-- The UserDao interface makes use of the DynamicFinder annotation so must inherit from dynamicDao bean -->
    <bean id="userDao" parent="dynamicDao">
        <property name="proxyInterfaces" value="org.openhds.dao.service.UserDao" />
        <property name="target">
            <bean parent="baseDao">
                <constructor-arg value="org.openhds.domain.model.User" />
            </bean>
        </property>
    </bean>
    
    <bean id="openhdsUserDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.User" />
    </bean>
    
    <bean id="adultVPMDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.AdultVPM" />
    </bean>
    
    <bean id="deathDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Death" />
    </bean>
    
     <bean id="demRatesDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.DemRates" />
    </bean>
 
    <bean id="extensionDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.ClassExtension" />
    </bean>

    <bean id="fieldWorkerDao" parent="baseDao" class="org.openhds.dao.service.impl.FieldWorkerDaoImpl">
        <constructor-arg value="org.openhds.domain.model.FieldWorker" />
        <property name="properties" ref="siteProperties" />
    </bean>

    <bean id="individualDao" parent="baseDao" class="org.openhds.dao.service.impl.IndividualDaoImpl">
        <constructor-arg value="org.openhds.domain.model.Individual" />
        <property name="properties" ref="siteProperties" />
    </bean>

    <bean id="inMigrationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.InMigration" />
    </bean>

    <bean id="locationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Location" />
    </bean>

    <bean id="locationHierarchyDao" parent="baseDao" class="org.openhds.dao.service.impl.LocationHierarchyDaoImpl">
        <constructor-arg value="org.openhds.domain.model.LocationHierarchy" />
    </bean>
    
    <bean id="locationHierarchyLevelDao" parent="baseDao" >
        <constructor-arg value="org.openhds.domain.model.LocationHierarchyLevel" />
    </bean>

    <bean id="membershipDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Membership" />
    </bean>
    
    <bean id="neoNatalVPMDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.NeoNatalVPM" />
    </bean>
    
    <bean id="noteDao" parent="baseDao" >
    	<constructor-arg value="org.openhds.domain.model.Note" />
    </bean>
    
    <bean id="outMigrationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.OutMigration" />
    </bean>
    
    <bean id="postNeoNatalVPMDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.PostNeoNatalVPM" />
    </bean>

    <bean id="pregnancyDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.PregnancyOutcome" />
    </bean>

    <bean id="pregnancyObservationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.PregnancyObservation" />
    </bean>

    <bean id="relationshipDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Relationship" />
    </bean>

    <bean id="residencyDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Residency" />
    </bean>

    <bean id="roleDao" parent="baseDao" class="org.openhds.dao.service.impl.RoleDaoImpl">
        <constructor-arg value="org.openhds.domain.model.Role" />
    </bean>

    <bean id="roundDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Round" />
    </bean>

    <bean id="socialGroupDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.SocialGroup" />
    </bean>

    <bean id="taskDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.AsyncTask" />
    </bean>
    
    <bean id="vaccinationDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Vaccination" />
    </bean>
        
    <bean id="visitDao" parent="baseDao">
        <constructor-arg value="org.openhds.domain.model.Visit" />
    </bean>
    
    <bean id="whitelistDao" parent="baseDao" >
    	<constructor-arg value="org.openhds.domain.model.Whitelist" />
    </bean>
   
</beans>